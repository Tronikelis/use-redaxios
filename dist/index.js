import{jsx as o}from"react/jsx-runtime";import{createContext as t,useContext as r,useState as a}from"react";import i from"redaxios";import{merge as e}from"merge-anything";import{dequal as n}from"dequal";import{useCustomCompareEffect as s}from"use-custom-compare";import c from"lru-cache";const d=t({options:{axios:i.defaults}});function u({options:t,children:r}){return o(d.Provider,Object.assign({value:{options:t}},{children:r}),void 0)}const l=new c({max:500,maxAge:36e5});function m(o,t={},c){var u,m;const{options:p}=r(d),[v,x]=a(null!==(m=l.get(o+(null===(u=e(p,t).axios)||void 0===u?void 0:u.url)+"get"))&&void 0!==m?m:void 0),[f,g]=a(!!c),[y,h]=a(void 0),w=async(r,a,s)=>{var c,d,u,m;g(!0);const v=e(p,t),f=l.get(o+a+(null===(c=v.axios)||void 0===c?void 0:c.url)+r);f&&(x(f),g(!1));v.axios=(null===(d=v.interceptors)||void 0===d?void 0:d.request)?await v.interceptors.request(null!==(u=v.axios)&&void 0!==u?u:{}):v.axios;const[y,w]=await async function(o){try{return[await o,!1]}catch(o){return[o,!0]}}(i({url:o+a,method:r,data:s,...v.axios}));return w?(h(y),q=y,v.onError&&v.onError(q),void g(!1)):(n(y.data,f)||(l.set(o+a+(null===(m=v.axios)||void 0===m?void 0:m.url)+r,y.data),x(y.data)),h(void 0),(o=>{v.onSuccess&&v.onSuccess(o)})(y.data),g(!1),y.data);var q};s((()=>{Array.isArray(c)&&w("get","")}),[...null!=c?c:[]],n);return{data:v,loading:f,error:y,get:async(o="")=>w("get",o),post:async(o="",t)=>w("post",o,t),del:async(o="")=>w("delete",o),put:async(o="",t)=>w("put",o,t),patch:async(o="",t)=>w("patch",o,t)}}export{u as RedaxiosProvider,m as useRedaxios};
