import{jsx as o}from"react/jsx-runtime";import{createContext as t,useContext as r,useState as a}from"react";import n from"redaxios";import{merge as e}from"merge-anything";import{dequal as i}from"dequal";import{useCustomCompareEffect as s}from"use-custom-compare";import c from"lru-cache";const u=t({options:{axios:n.defaults}});function l({options:t,children:r}){return o(u.Provider,Object.assign({value:{options:t}},{children:r}),void 0)}const d=new c({max:500,maxAge:36e5});function m(o,t={},c){var l;const{options:m}=r(u),[p,v]=a(null!==(l=d.get(o))&&void 0!==l?l:{}),[x,f]=a(!!c),[y,g]=a(null),h=async(r,a,s)=>{var c,u,l,p;f(!0);const x=e(m,t),y=d.get(o+(null===(c=x.axios)||void 0===c?void 0:c.url)+r);y&&(v(y),f(!1));x.axios=(null===(u=x.interceptors)||void 0===u?void 0:u.request)?await x.interceptors.request(null!==(l=x.axios)&&void 0!==l?l:{}):x.axios;const[h,w]=await async function(o){try{return[await o,!1]}catch(o){return[o,!0]}}(n({url:o+a,method:r,data:s,...x.axios}));return w?(g(h),q=h,x.onError&&x.onError(q),void f(!1)):(i(h.data,y)||(d.set(o+(null===(p=x.axios)||void 0===p?void 0:p.url)+r,h.data),v(h.data)),g(null),(o=>{x.onSuccess&&x.onSuccess(o)})(h.data),f(!1),h.data);var q};s((()=>{Array.isArray(c)&&h("get","")}),[...null!=c?c:[]],i);return{data:p,loading:x,error:y,get:async(o="")=>h("get",o),post:async(o="",t)=>h("post",o,t),del:async(o="")=>h("delete",o),put:async(o="",t)=>h("put",o,t),patch:async(o="",t)=>h("patch",o,t)}}export{l as RedaxiosProvider,m as useRedaxios};
