import{jsx as t}from"react/jsx-runtime";import{createContext as o,useContext as r,useState as e}from"react";import a from"redaxios";import{merge as i}from"merge-anything";import{dequal as n}from"dequal";import{useCustomCompareEffect as s}from"use-custom-compare";import c from"quick-lru";import d from"fast-json-stable-stringify";const p=o({options:{axios:a.defaults}});function u({options:o,children:r}){return t(p.Provider,Object.assign({value:{options:o}},{children:r}),void 0)}const l=({...t})=>d({...t}),m=new c({maxSize:500,maxAge:36e5});function v(t,o={},c){var d;const{options:u}=r(p),[v,y]=e(null!==(d=m.get(l({url:t,relativeUrl:"",type:"get",options:o,deps:c})))&&void 0!==d?d:void 0),[f,g]=e(!!c),[x,h]=e(void 0),b=async(r,e,s)=>{var d,p;const v=m.get(l({url:t,relativeUrl:e,type:r,body:s,options:o,deps:c}));v?(y(v),g(!1)):g(!0);const f=i(u,o);f.axios=(null===(d=f.interceptors)||void 0===d?void 0:d.request)?await f.interceptors.request(null!==(p=f.axios)&&void 0!==p?p:{}):f.axios;const[x,b]=await async function(t){try{return[await t,!1]}catch(t){return[t,!0]}}(a({url:t+e,method:r,data:s,...f.axios}));return b?(h(x),q=x,f.onError&&f.onError(q),void g(!1)):(n(x.data,v)||(m.set(l({url:t,relativeUrl:e,type:r,body:s,options:o,deps:c}),x.data),y(x.data)),h(void 0),(t=>{f.onSuccess&&f.onSuccess(t)})(x.data),g(!1),x.data);var q};s((()=>{Array.isArray(c)&&b("get","")}),[...null!=c?c:[]],n);return{data:v,loading:f,error:x,get:async(t="")=>b("get",t),post:async(t="",o)=>b("post",t,o),del:async(t="")=>b("delete",t),put:async(t="",o)=>b("put",t,o),patch:async(t="",o)=>b("patch",t,o)}}export{u as RedaxiosProvider,v as useRedaxios};
