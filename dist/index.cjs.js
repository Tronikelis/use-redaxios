"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("react/jsx-runtime"),t=require("react"),r=require("redaxios"),a=require("merge-anything"),o=require("dequal"),s=require("use-custom-compare"),u=require("quick-lru"),i=require("fast-json-stable-stringify");function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var l=n(r),c=n(u),d=n(i);const p={axios:l.default.defaults},v=t.createContext({options:p});const f=({...e})=>((e,t=0)=>{let r=3735928559^t,a=1103547991^t;for(let t,o=0;o<e.length;o++)t=e.charCodeAt(o),r=Math.imul(r^t,2654435761),a=Math.imul(a^t,1597334677);return r=Math.imul(r^r>>>16,2246822507)^Math.imul(a^a>>>13,3266489909),a=Math.imul(a^a>>>16,2246822507)^Math.imul(r^r>>>13,3266489909),4294967296*(2097151&a)+(r>>>0)})(d.default({...e})),y=new c.default({maxSize:500,maxAge:36e5});exports.RedaxiosProvider=function({options:t,children:r}){return e.jsx(v.Provider,Object.assign({value:{options:t}},{children:r}),void 0)},exports.useRedaxios=function(e,r={},u){var i;const{options:n}=t.useContext(v),[c,d]=t.useState(null!==(i=y.get(f({url:e,relativeUrl:"",type:"get",options:r,deps:u})))&&void 0!==i?i:void 0),[p,h]=t.useState(!!u),[m,x]=t.useState(!!u),[g,q]=t.useState(void 0),b=async(t,s,i)=>{var c;x(!0);const p=y.get(f({url:e,relativeUrl:s,type:t,body:i,options:r,deps:u}));p?(d(p),h(!1)):h(!0);const v=a.merge(n,r);v.axios=await(e=>{var t;return(null===(t=v.interceptors)||void 0===t?void 0:t.request)?v.interceptors.request(e):e})(null!==(c=v.axios)&&void 0!==c?c:{});const[m,g]=await async function(e){try{return[await e,!1]}catch(e){return[e,!0]}}(l.default({url:e+s,method:t,data:i,...v.axios}));return g?(q(m),b=m,v.onError&&v.onError(b),x(!1),void h(!1)):(m.data=await(e=>{var t;return(null===(t=v.interceptors)||void 0===t?void 0:t.response)?v.interceptors.response(e):e})(m.data),o.dequal(m.data,p)||(y.set(f({url:e,relativeUrl:s,type:t,body:i,options:r,deps:u}),m.data),d(m.data)),q(void 0),(e=>{v.onSuccess&&v.onSuccess(e)})(m.data),x(!1),h(!1),m.data);var b};s.useCustomCompareEffect((()=>{Array.isArray(u)&&b("get","")}),[...null!=u?u:[]],o.dequal);const C=t.useCallback((async(e="")=>b("get",e)),[e]),M=t.useCallback((async(e="",t)=>b("post",e,t)),[e]),S=t.useCallback((async(e="")=>b("delete",e)),[e]),j=t.useCallback((async(e="",t)=>b("put",e,t)),[e]),k=t.useCallback((async(e="",t)=>b("patch",e,t)),[e]);return{data:c,error:g,fetching:m,loading:p,get:C,post:M,del:S,put:j,patch:k}};
